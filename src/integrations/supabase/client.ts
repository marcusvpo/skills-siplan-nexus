
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://bnulocsnxiffavvabfdj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJudWxvY3NueGlmZmF2dmFiZmRqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzM1NTMsImV4cCI6MjA2NjQ0OTU1M30.3QeKQtbvTN4KQboUKhqOov16HZvz-xVLxmhl70S2IAE";

// Singleton instance to prevent multiple GoTrueClient instances
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
  },
  global: {
    headers: {},
  },
});

console.log('üîê [SupabaseClient] Main client created (singleton)');

// Single cache for authenticated clients
const authClientCache = new Map<string, any>();

// Helper function to create authenticated supabase instance
export const createAuthenticatedClient = (jwtToken: string) => {
  // Use cache to prevent multiple instances with same token
  if (authClientCache.has(jwtToken)) {
    console.log('üîê [createAuthenticatedClient] Using cached client');
    return authClientCache.get(jwtToken);
  }
  
  console.log('üîê [createAuthenticatedClient] Creating new authenticated client');
  
  const authenticatedClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      persistSession: false,
      autoRefreshToken: false,
    },
    global: {
      headers: {
        'Authorization': `Bearer ${jwtToken}`,
      },
    },
  });

  // Add to cache
  authClientCache.set(jwtToken, authenticatedClient);
  
  return authenticatedClient;
};

// Function to clear cache when needed
export const clearAuthClientCache = () => {
  console.log('üîê [clearAuthClientCache] Clearing cache');
  authClientCache.clear();
};

// Deprecated functions kept for compatibility
export const setCustomAuthToken = (token: string) => {
  console.log('‚ö†Ô∏è [setCustomAuthToken] Function deprecated');
};

export const clearCustomAuthToken = () => {
  console.log('‚ö†Ô∏è [clearCustomAuthToken] Function deprecated');
};
