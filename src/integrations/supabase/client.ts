
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://bnulocsnxiffavvabfdj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJudWxvY3NueGlmZmF2dmFiZmRqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzM1NTMsImV4cCI6MjA2NjQ0OTU1M30.3QeKQtbvTN4KQboUKhqOov16HZvz-xVLxmhl70S2IAE";

// Inst칙ncia singleton do cliente Supabase principal
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: false, // Disable default auth since we use custom tokens
    autoRefreshToken: false,
  },
  global: {
    headers: {},
  },
});

// Cache para clientes autenticados para evitar m칰ltiplas inst칙ncias
const clientCache = new Map<string, any>();

// Helper function to create authenticated supabase instance
export const createAuthenticatedClient = (jwtToken: string) => {
  // Usar cache para evitar criar m칰ltiplas inst칙ncias com o mesmo token
  if (clientCache.has(jwtToken)) {
    return clientCache.get(jwtToken);
  }
  
  logger.debug('游댏 [createAuthenticatedClient] Creating new client with JWT token');
  
  const authenticatedClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      persistSession: false,
      autoRefreshToken: false,
    },
    global: {
      headers: {
        'Authorization': `Bearer ${jwtToken}`, // JWT v치lido da edge function
      },
    },
  });

  // Adicionar ao cache
  clientCache.set(jwtToken, authenticatedClient);
  
  return authenticatedClient;
};

// Fun칞칚o para limpar cache quando necess치rio
export const clearAuthClientCache = () => {
  logger.debug('游댏 [clearAuthClientCache] Clearing authenticated client cache');
  clientCache.clear();
};

// Fun칞칫es mantidas para compatibilidade (deprecated)
export const setCustomAuthToken = (token: string) => {
  logger.debug('丘멆잺 [setCustomAuthToken] Function deprecated, use createAuthenticatedClient instead');
};

export const clearCustomAuthToken = () => {
  logger.debug('丘멆잺 [clearCustomAuthToken] Function deprecated, use clearAuthClientCache instead');
};

// Importar logger se n칚o estiver dispon칤vel
const logger = {
  debug: (message: string) => console.log(message),
  info: (message: string) => console.log(message),
  error: (message: string, error?: any) => console.error(message, error)
};
