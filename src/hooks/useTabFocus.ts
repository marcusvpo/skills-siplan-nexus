
import { useEffect } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { useNavigate } from 'react-router-dom';

export const useTabFocus = () => {
  const navigate = useNavigate();

  useEffect(() => {
    const handleVisibilityChange = async () => {
      if (!document.hidden) {
        // Usu√°rio voltou para a aba - verificar sess√£o
        try {
          console.log('üëÅÔ∏è [useTabFocus] Usu√°rio voltou para a aba, verificando sess√£o...');
          
          const { data: { session }, error } = await supabase.auth.getSession();
          
          if (error) {
            console.error('‚ùå [useTabFocus] Erro ao verificar sess√£o:', error);
            return;
          }
          
          if (!session) {
            console.log('‚ùå [useTabFocus] Sess√£o expirou, redirecionando para login');
            navigate('/login');
            return;
          }
          
          // Verificar se a sess√£o ainda √© v√°lida (n√£o expirou)
          const now = Math.floor(Date.now() / 1000);
          const expiresAt = session.expires_at || 0;
          
          if (expiresAt <= now) {
            console.log('‚ùå [useTabFocus] Sess√£o expirou, redirecionando para login');
            await supabase.auth.signOut();
            navigate('/login');
            return;
          }
          
          console.log('‚úÖ [useTabFocus] Sess√£o v√°lida');
        } catch (error) {
          console.error('‚ùå [useTabFocus] Erro inesperado ao verificar sess√£o:', error);
        }
      }
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);
    
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
  }, [navigate]);
};
